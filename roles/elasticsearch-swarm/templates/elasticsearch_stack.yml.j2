version: "3.7"

services:
  setup:
    image: {{ swarm_elasticsearch_image }}:{{ swarm_elasticsearch_image_version }}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    deploy:
      replicas: 1
      restart_policy:
        condition: none
    user: "0"
    environment:
      - ELASTIC_PASSWORD="{{ swarm_elasticsearch_password }}" # this is stupid, and there has to be a better way, rewrite the whole thing to ansible tasks
      - KIBANA_PASSWORD="{{ swarm_kibana_password }}" # same here
    command: >
      bash -c '
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: es01\n"\
          "    dns:\n"\
          "      - es01\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es02\n"\
          "    dns:\n"\
          "      - es02\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: es03\n"\
          "    dns:\n"\
          "      - es03\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://es01:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:{{ swarm_elasticsearch_password }}" -H "Content-Type: application/json" https://es01:9200/_security/user/kibana_system/_password -d "{\"password\":\"{{ swarm_kibana_password }}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    networks:
      - elasticsearch_default
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120
    secrets:
      - elasticsearch_password
      - kibana_password

  es01:
    depends_on:
      - setup
    image: {{ swarm_elasticsearch_image }}:{{ swarm_elasticsearch_image_version }}
    deploy:
      replicas: 1 
      resources:
        limits:
          cpus: '{{ swarm_elasticsearch_cpu_limits }}'
          memory: {{ swarm_elasticsearch_memory_limits }}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - {{ swarm_elasticsearch_port }}:9200
    environment:
      - node.name=es01
      - cluster.name={{ swarm_elasticsearch_cluster_name }}
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es02,es03
      #- ELASTIC_PASSWORD_FILE=/run/secrets/elasticsearch_password
      - ELASTIC_PASSWORD={{ swarm_elasticsearch_password }}
      - "ES_JAVA_OPTS={{ swarm_elasticsearch_java_opts }}" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es01/es01.key
      - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es01/es01.key
      - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
    networks:
      - elasticsearch_default
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 40s
      retries: 120
    secrets:
      - source: elasticsearch_password
        target: elasticsearch_password
        mode: 0600
        uid: '0'
        gid: '1000'
      - source: kibana_password
        target: kibana_password
        mode: 0600
        uid: '0'
        gid: '1000'

  es02:
    depends_on:
      - es01
    image: {{ swarm_elasticsearch_image }}:{{ swarm_elasticsearch_image_version }}
    deploy:
      replicas: 1 
      resources:
        limits:
          cpus: '{{ swarm_elasticsearch_cpu_limits }}'
          memory: {{ swarm_elasticsearch_memory_limits }}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata02:/usr/share/elasticsearch/data
    environment:
      - node.name=es02
      - cluster.name={{ swarm_elasticsearch_cluster_name }}
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es01,es03
      - ELASTIC_PASSWORD={{ swarm_elasticsearch_password }}
      - "ES_JAVA_OPTS={{ swarm_elasticsearch_java_opts }}" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - network.host=0.0.0.0
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es02/es02.key
      - xpack.security.http.ssl.certificate=certs/es02/es02.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es02/es02.key
      - xpack.security.transport.ssl.certificate=certs/es02/es02.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
    networks:
      - elasticsearch_default
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 40s
      retries: 120
    secrets:
      - elasticsearch_password
      - kibana_password

  es03:
    depends_on:
      - es01
    image: {{ swarm_elasticsearch_image }}:{{ swarm_elasticsearch_image_version }}
    deploy:
      replicas: 1 
      resources:
        limits:
          cpus: '{{ swarm_elasticsearch_cpu_limits }}'
          memory: {{ swarm_elasticsearch_memory_limits }}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata03:/usr/share/elasticsearch/data
    environment:
      - node.name=es03
      - cluster.name={{ swarm_elasticsearch_cluster_name }}
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es01,es02
      - ELASTIC_PASSWORD={{ swarm_elasticsearch_password }}
      - "ES_JAVA_OPTS={{ swarm_elasticsearch_java_opts }}" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - network.host=0.0.0.0
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es03/es03.key
      - xpack.security.http.ssl.certificate=certs/es03/es03.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es03/es03.key
      - xpack.security.transport.ssl.certificate=certs/es03/es03.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
    networks:
      - elasticsearch_default
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 40s
      retries: 120
    secrets:
      - elasticsearch_password
      - kibana_password

  kibana:
    depends_on:
      - es01
    image: {{ swarm_elasticsearch_kibana_image }}:{{ swarm_elasticsearch_image_version }}
    deploy:
      replicas: 1 
      resources:
        limits:
          cpus: '{{ swarm_elasticsearch_kibana_cpu_limits }}'
          memory: {{ swarm_elasticsearch_kibana_memory_limits }}
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
    networks:
      - elasticsearch_default
    ports:
      - {{ swarm_kibana_port }}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD={{ swarm_kibana_password }}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 40s
      retries: 120
    secrets:
      - elasticsearch_password
      - kibana_password

networks:
  elasticsearch_default:
    name: elasticsearch_default
    external: true

secrets:
  elasticsearch_password:
    external: true
  kibana_password:
    external: true

volumes:
  certs:
    driver: local
  esdata01:
    driver: local
  esdata02:
    driver: local
  esdata03:
    driver: local
  kibanadata:
    driver: local
