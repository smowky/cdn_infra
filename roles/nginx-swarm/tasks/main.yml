---
# swarm

- name: Create stack directory
  file:
    path: "{{ nginx_swarm_stack_dir }}"
    state: directory

- name: Copy nginx stack prescription
  template:
    src: "nginx_stack.yml.j2"
    dest: "{{ nginx_swarm_stack_dir }}/nginx_stack.yml"
    lstrip_blocks: yes
    mode: '600'

- name: Create nginx config directory
  file:
    path: "{{ nginx_swarm_config_dir }}"
    state: directory

- name: Create working directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ nginx_swarm_log_directory }}"
    - "{{ nginx_swarm_vhost_directory }}"
    - "{{ nginx_swarm_configuration_directory }}"
    - "{{ nginx_swarm_ssl_directory }}"
    - "{{ nginx_swarm_root_directory }}"
    - "{{ nginx_swarm_conf_directory }}"

# Setup and config    
- name: Set up nginx configuration
  template: 
    src: nginx.conf.j2 
    dest: "{{ nginx_swarm_conf_directory }}/nginx.conf"
    owner: root 
    group: root 
    mode: 0644
  notify: Restart nginx

- name: Create nginx default site config
  template: 
    src: default.j2 
    dest: "{{ nginx_swarm_vhost_directory }}/default"
    owner: root 
    group: root 
    mode: 0644
  notify: Reload nginx

# alway keep 443 default enabled, unless its port 443 closed
  when: nginx_swarm_ssl
- name: Create nginx default ssl site config
  template: 
    src: default_ssl.j2
    dest: "{{ nginx_swarm_vhost_directory }}/default_ssl"
    owner: root 
    group: root 
    mode: 0644
  notify: Reload nginx

- name: Set up nginx default site HTML
  template: 
    src: index.html.j2 
    dest: "{{ nginx_swarm_root_directory }}/index.html"
    owner: www-data 
    group: www-data 
    mode: 0644
  notify: Reload nginx

- name: Generate 4096b DH
  command: "/usr/bin/openssl dhparam -out {{ nginx_swarm_ssl_directory }}/dhparams_4096.pem 4096"
  args:
    creates: "{{ nginx_swarm_ssl_directory }}/dhparams_4096.pem"

- name: Add security input 
  template:
    src: ssl_modern.include.j2
    dest: "{{ nginx_swarm_configuration_directory }}/ssl_modern.include"
    mode: 0644
  tags: nginx-ssl
  notify: Reload nginx

- name: Create custom certs directory 
  file:
    path: "{{ certbot_conf_dir }}"
    state: directory

- name: Check if cert files exist
  stat:
    path: "{{ certbot_conf_dir }}/live/{{ nginx_swarm_default_server_name }}"
  register: certbot_certs
  when: nginx_swarm_ssl

- name: Issue certificate with certbot command
  docker_container:
    name: "{{ certbot_hostname }}"
    image: "{{ certbot_image }}"
    volumes:
    - "{{ certbot_conf_dir }}/:/etc/letsencrypt/"
    - "{{ certbot_conf_dir }}/www/:/var/www/certbot/"
    command: certonly --webroot --email {{ certbot_email }} --agree-tos --webroot-path=/var/www/certbot/ -d {{ nginx_swarm_default_server_name }}  --http-01-address 0.0.0.0
  when: nginx_swarm_ssl
  tags: nginx-certbot

# Start swarm stack
- name: Ensure there is nginx
  docker_stack:
    state: present
    name: nginx
    compose:
      - "{{ nginx_swarm_stack_dir }}/nginx_stack.yml"
  tags: stack-reload

