# Grafana nginx server configuration

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
	listen 80;
	listen [::]:80;

    {% if grafana_logging %}
	access_log /var/log/nginx/grafana.access.log;
        error_log /var/log/nginx/grafana.error.log;
    {% endif %}

	root /var/www;

	index index.html;

	server_name {{ grafana_server_name }};
        client_max_body_size 100M;

	location / {
	    satisfy any;

{% if grafana_htaccess is true %}
        {% for ip in grafana_allowed_ips %}
        allow {{ ip }};
        {% endfor %}
	    deny  all;
	    auth_basic           "Administrator’s Area";
        auth_basic_user_file /etc/nginx/conf.d/grafana.htpasswd;
{% endif %}

        {% if grafana_ssl %}
		return 301 https://$host$request_uri;
		{% else %}
		resolver 127.0.0.11 valid=30s;
		set $upstream http://127.0.0.1:3000;
		proxy_pass $upstream;
        {% endif %}
	}
}


{% if grafana_ssl %}
server {
	listen 443 ssl;
	listen [::]:443 ssl;

    {% if grafana_nginx_log %}
	access_log /var/log/nginx/grafana.access.log;
    error_log /var/log/nginx/grafana.error.log;
    {% endif %}

	ssl_certificate {{ nginx_ssl_directory }}/grafana.pem;
	ssl_certificate_key {{ nginx_ssl_directory }}/grafana.key;
	include conf.d/ssl_modern.include;

	root /var/www;

	index index.html;

	server_name {{ grafana_server_name }};
        client_max_body_size 100M;

	location / {
        satisfy any;

        {% if grafana_htaccess is true %}
        {% for ip in grafana_allowed_ips %}
        allow {{ ip }};
        {% endfor %}
        deny  all;

	    auth_basic           "Administrator’s Area";
        auth_basic_user_file /etc/nginx/conf.d/grafana.htpasswd;
{% endif %}
        resolver 127.0.0.11 valid=30s;
		set $upstream http://127.0.0.1:3000;
##################
# web socket updates
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $http_host;
###################
# ip address test
		proxy_set_header   X-Real-IP          $remote_addr;
		proxy_set_header   X-Forwarded-Proto  $scheme;
		proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
##################
		proxy_pass $upstream;
	}

       location /grafana/api/live {
            resolver 127.0.0.11 valid=30s;
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $http_host;
            set $upstream http://127.0.0.1:3000;
            proxy_pass $upstream;

          }


}
{% endif %}
